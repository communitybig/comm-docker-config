post_install() {
    if ! getent group docker > /dev/null; then
        groupadd docker
    fi

    for user in $(awk -F':' '{ if ($3 >= 1000 && $1 != "nobody") print $1 }' /etc/passwd); do
        usermod -aG docker "$user"
    done

    if [ "$(grep LimitNOFILE= /lib/systemd/system/containerd.service | cut -d "=" -f2)" = "infinity" ];then
        sed -i '/LimitNOFILE=/s/infinity/1048576/' /lib/systemd/system/containerd.service
    fi

    # Enable Docker to start on boot
    systemctl enable docker

    # Start Docker service
    systemctl start docker

    # Update current user's groups in the current session
    usermod -aG docker "$(id -un)"

    #change permissions
    chmod 666 /var/run/docker.sock
}

post_upgrade() {
    if [ "$(grep LimitNOFILE= /lib/systemd/system/containerd.service | cut -d "=" -f2)" = "infinity" ];then
        active=$(systemctl is-active containerd.service)
        sed -i '/LimitNOFILE=/s/infinity/1048576/' /lib/systemd/system/containerd.service
        systemctl daemon-reload
        if [ "$active" = "active" ];then
            systemctl restart containerd.service
        fi
    fi
}

post_remove() {
    echo "Starting post-remove process..."

    # Remove dependent packages
    for pkg in docker docker-compose; do
        if pacman -Qi "$pkg" &> /dev/null; then
            echo "Removing dependent package: $pkg"
            if ! sudo pacman -Rns --noconfirm "$pkg"; then
                echo "Failed to remove $pkg. Continuing with the next steps..."
            fi
        else
            echo "Package $pkg is not installed. Skipping..."
        fi
    done

    # Stop the Docker service if it's running
    if systemctl is-active --quiet docker.service; then
        echo "Stopping Docker service..."
        systemctl stop docker
    else
        echo "Docker service is not running. Skipping stop step."
    fi

    # Disable the Docker service if it's enabled
    if systemctl is-enabled --quiet docker.service; then
        echo "Disabling Docker service..."
        systemctl disable docker.service
    else
        echo "Docker service is already disabled. Skipping disable step."
    fi

    # Remove the Docker group if it exists
    if getent group docker > /dev/null; then
        echo "Removing Docker group..."
        groupdel docker
    else
        echo "Docker group does not exist. Skipping group removal."
    fi

    echo "Post-remove process completed."
}